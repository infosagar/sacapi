{
    "swagger": "2.0",
    "info": {
        "description": "The SAP Analytics Cloud Tenant API is based on OpenAPI Specifications. The API allows third party applications access to story and user data stored on an SAP Analytics Cloud tenant. The API is best used for requesting small amounts of data in real time. You must have a tenant URL and SAP Analytics Cloud user credentials to use this API.",
        "version": "1.0",
        "title": "SAP Analytics Cloud Tenant API"
    },
    "basePath": "/api",
    "tags": [
        {
            "name": "Stories",
            "description": "APIs that allow you to access SAP Analytics Cloud stories."
        },
        {
            "name": "Users",
            "description": "APIs that allow you to access SAP Analytics Cloud users."
        },
        {
            "name": "Groups",
            "description": "APIs that allow you to access SAP Analytics Cloud groups."
        },
        {
            "name": "Permissions",
            "description": "APIs that allow you to share SAP Analytics Cloud resource permissions to SuccessFactors roles and groups."
        },
        {
          "name": "Resources",
          "description": "OData 2.0 service that returns Resources type metadata. For access to non-Resource type metadata, reference Metadata endpoint. Reference for OData 2.0 URI conventions: https://www.odata.org/documentation/odata-version-2-0/uri-conventions/"
        },
        {
          "name": "Metadata",
          "description": "OData 2.0 service that returns service metadata information. More information at: https://www.odata.org/blog/queryable-odata-metadata/. Reference for OData 2.0 URI conventions: https://www.odata.org/documentation/odata-version-2-0/uri-conventions/"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/v1/permissions": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Returns access details for multiple resources",
                "description": "Returns the permissions details for all resources specified in the request's body. Results include lists of  grantees with their IDs and access levels. Intended for interface with SuccessFactors roles and groups only. This is not a general-use endpoint.",
                "operationId": "getPermissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "resourceIds",
                        "description": "An array of resource IDs to return permissions for. Any IDs that do not correspond to IDs in SAP Analytics Cloud will be ignored.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Permission"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Updates access permissions for all specified resources",
                "description": "Updates the permissions for grantees associated with each resource indicated in the request body. All grantees not included in the request will not have access to specified resources. Intended for interface with SuccessFactors roles and groups only. This is not a general-use endpoint.",
                "operationId": "patchPermissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "SetShareRequestBody",
                        "description": "A list of permission objects to set, and a boolean that determines if folder permissions cascade to member resources. See the help center for examples.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SetShareRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Permission"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/permissions/{resourceId}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Returns information on who has access to this resource",
                "description": "Returns a list of IDs and access levels for all grantees who have permissions to access the specified resource. Intended for interface with SuccessFactors roles and groups only. This is not a general-use endpoint.",
                "operationId": "getPermission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "resourceId",
                        "in": "path",
                        "description": "The ID of the resource to query. The ID must match a resource ID in SAP Analytics Cloud.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/permissions/{resourceId}/ALL": {
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Revokes the default (ALL) grantee's access to a resource",
                "description": "Removes the default permissions to the resource with the given ID. When successful, the default tenant access to the resource is removed. Note: Users may still have access if granted through a TEAM or USER permission. Intended for interface with SuccessFactors roles and groups only. This is not a general-use endpoint.",
                "operationId": "deleteAllPermission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "resourceId",
                        "in": "path",
                        "description": "The ID of the resource to remove access to. The ID must match a resource ID in SAP Analytics Cloud.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/permissions/{resourceId}/{granteeType}/{granteeId}": {
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Revokes a grantee's access to a resource",
                "description": "Removes the grantee's permissions to the specified resource. When successful, the grantee will have no explicit access to the resource. Note: A grantee may still have access if permissions are given through TEAM or ALL permissions. Intended for interface with SuccessFactors roles and groups only. This is not a general-use endpoint.",
                "operationId": "deletePermission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "resourceId",
                        "in": "path",
                        "description": "The ID of the resource to remove access to. The ID must match a resource ID in SAP Analytics Cloud.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "granteeType",
                        "in": "path",
                        "description": "The type of grantee to remove (USER, TEAM).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "granteeId",
                        "in": "path",
                        "description": "The ID of the grantee to remove. Do not prefix with the tenant ID.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/Resources":{
           "get":{
              "tags":[
                 "Resources"
              ],
              "summary":"Resources",
              "description":"OData 2.0 service that returns Resources type metadata. For access to non-Resource type metadata, reference Metadata endpoint. Reference for OData 2.0 URI conventions: https://www.odata.org/documentation/odata-version-2-0/uri-conventions/.",
              "operationId":"resources",
              "responses":{
                 "200":{
                    "description":"Successful operation"
                 },
                 "400":{
                    "description":"Bad request; please refer to documentation",
                    "schema":{
                       "$ref":"#/definitions/ErrorResponse"
                    }
                 },
                 "403":{
                    "description":"Authenticated user is not permitted to perform the requested operation",
                    "schema":{
                       "$ref":"#/definitions/ErrorResponse"
                    }
                 },
                 "404":{
                    "description":"Resource not found",
                    "schema":{
                       "$ref":"#/definitions/ErrorResponse"
                    }
                 },
                 "500":{
                    "description":"A server error has occurred",
                    "schema":{
                       "$ref":"#/definitions/ErrorResponse"
                    }
                 }
              }
           }
        },
        "/v1/$metadata":{
           "get":{
              "tags":[
                 "Metadata"
              ],
              "summary":"Metadata",
              "description":"OData 2.0 service that returns service metadata information. More information at: https://www.odata.org/blog/queryable-odata-metadata/. Reference for OData 2.0 URI conventions: https://www.odata.org/documentation/odata-version-2-0/uri-conventions/.",
              "operationId":"metadata",
              "responses":{
                 "200":{
                    "description":"Successful operation"
                 },
                 "400":{
                    "description":"Bad request; please refer to documentation",
                    "schema":{
                       "$ref":"#/definitions/ErrorResponse"
                    }
                 },
                 "403":{
                    "description":"Authenticated user is not permitted to perform the requested operation",
                    "schema":{
                       "$ref":"#/definitions/ErrorResponse"
                    }
                 },
                 "404":{
                    "description":"Resource not found",
                    "schema":{
                       "$ref":"#/definitions/ErrorResponse"
                    }
                 },
                 "500":{
                    "description":"A server error has occurred",
                    "schema":{
                       "$ref":"#/definitions/ErrorResponse"
                    }
                 }
              }
           }
        },
        "/v1/scim/Groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Query groups",
                "description": "Queries the list of groups. Results are paginated",
                "operationId": "queryGroups",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "name": "startIndex",
                        "in": "query",
                        "description": "The 1-based start index for pagination. Default: 1",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of users in the page. Default: 50",
                        "required": false,
                        "type": "integer",
                        "default": 50,
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Creates a group",
                "description": "Creates a new group with the given group object",
                "operationId": "createGroup",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "group",
                        "description": "The new ScimGroup object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            }
        },
        "/v1/scim/Groups/{id}": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Returns a group",
                "description": "Returns the group with the given groupId",
                "operationId": "getGroup",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The groupId of the group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Updates a group",
                "description": "Updates the given groupId with the group object",
                "operationId": "updateGroup",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The groupId of the group to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "group",
                        "description": "The updated ScimGroup object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Deletes a group",
                "description": "Finds the group object with the given groupId and deletes it if it exists",
                "operationId": "deleteGroup",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The groupId of the group",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            }
        },
        "/v1/scim/Users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns a user",
                "description": "Returns the user with the given userId",
                "operationId": "getUser",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user ID without fully-qualified name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates a user",
                "description": "Updates the given userId with the user object",
                "operationId": "updateUser",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user ID without fully-qualified name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "user",
                        "description": "The updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deletes a user",
                "description": "Finds the user object with the given userId and deletes it if it exists",
                "operationId": "deleteUser",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user ID without fully-qualified name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            }
        },
        "/v1/scim/Users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Query users",
                "description": "Queries the list of users. Results are paginated",
                "operationId": "queryUsers",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "name": "startIndex",
                        "in": "query",
                        "description": "The 1-based start index for pagination. Default: 1",
                        "required": false,
                        "type": "integer",
                        "default": 1,
                        "format": "int64"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The number of users in the page. Default: 50",
                        "required": false,
                        "type": "integer",
                        "default": 50,
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The filter expression",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Creates a user",
                "description": "Creates a new user with the given user object",
                "operationId": "createUser",
                "consumes": [
                    "application/json",
                    "application/scim+json"
                ],
                "produces": [
                    "application/json",
                    "application/scim+json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "The new user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/BadRequestException"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ForbiddenException"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/NotFoundException"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/InternalServerErrorException"
                        }
                    }
                }
            }
        },
        "/v1/stories": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "Returns a list of stories and story metadata.",
                "description": "Returns a list of stories and story metadata. Only information that the user has access to will appear.",
                "operationId": "getStories",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Specifies additional metadata to include in the response. For example, 'models' will include the metadata of the models in each story returned in the response. Possible values: models. Note: Currently, only 'models' is supported as a parameter.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "models"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Story"
                            }
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Stories"
                ],
                "summary": "Copies a story.",
                "description": "Copies an existing story to the specified parent resource ID. By default, it will create it in the source folder. The body contains the optional new name.",
                "operationId": "copyStory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "copyFrom",
                        "in": "query",
                        "description": "Resource ID of the source story",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "copyTo",
                        "in": "query",
                        "description": "Resource ID of the target folder. If not specified then the new story would be created under the same folder as the existing story",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "New story name. If a story by the same name exists in the copied location or copyTo is not specified, the new story's name will be affixed by \"copy\"",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ModifiedStory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/StoryCopyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/stories/{id}": {
            "delete": {
                "tags": [
                    "Stories"
                ],
                "summary": "Deletes the specified story.",
                "description": "Takes the resource ID of a story and deletes it.",
                "operationId": "deleteStory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource ID of the story to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Stories"
                ],
                "summary": "Renames a story.",
                "description": "Takes the resource ID of a story and its new name and renames the story.",
                "operationId": "renameStory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Resource ID of the story to be changed",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Object that contains the new story name. The name has to be unique.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ModifiedStory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/ModifiedStory"
                        }
                    },
                    "400": {
                        "description": "Bad request; please refer to documentation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Authenticated user is not permitted to perform the requested operation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "A server error has occurred",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "oauth2": {
            "description": "You need to configure your SAP Analytics Cloud system's public APIs to be consumed via OAuth 2.0 clients. SAML bearer tokens are used to access OAuth 2.0 resources. The authorization and token URL are required when setting up new clients.",
            "type": "oauth2",
            "tokenUrl": "https://{OAuthTokenURL}",
            "flow": "application",
            "scopes": {
                "default": "Default scope"
            }
        }
    },
    "definitions": {
        "Grantee": {
            "type": "object",
            "required": [
                "access",
                "granteeType"
            ],
            "discriminator": "granteeType",
            "properties": {
                "granteeId": {
                    "type": "string"
                },
                "granteeType": {
                    "type": "string",
                    "description": "The grantee's type. USER, TEAM or ALL"
                },
                "access": {
                    "type": "array",
                    "example": "[READ, SHARE, UPDATE, DELETE]",
                    "description": "An array of access values that define the access level this grantee has to the specified resource.",
                    "uniqueItems": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "DENY",
                            "SHARE",
                            "READ",
                            "UPDATE",
                            "DELETE",
                            "CREATE_DOC",
                            "CREATE_FOLDER",
                            "MAINTAIN"
                        ]
                    }
                },
                "xsCompliantGranteeId": {
                    "type": "string"
                }
            },
            "description": "An SAP Analytics Cloud user, team, or the default access level for all users on a tenant."
        },
        "GranteeAll": {
            "allOf": [
                {
                    "$ref": "#/definitions/Grantee"
                },
                {
                    "type": "object",
                    "properties": {
                        "granteeType": {
                            "type": "string",
                            "description": "The grantee's type, ALL"
                        }
                    },
                    "description": "The default access level that all users have to a specified resource."
                }
            ]
        },
        "GranteeTeam": {
            "allOf": [
                {
                    "$ref": "#/definitions/Grantee"
                },
                {
                    "type": "object",
                    "required": [
                        "granteeId"
                    ],
                    "properties": {
                        "granteeId": {
                            "type": "string",
                            "description": "The grantee's ID in SAP Analytics Cloud"
                        },
                        "granteeType": {
                            "type": "string",
                            "description": "The grantee's type, TEAM"
                        }
                    },
                    "description": "The access levels for all members of a team to a specified resource."
                }
            ]
        },
        "GranteeUser": {
            "allOf": [
                {
                    "$ref": "#/definitions/Grantee"
                },
                {
                    "type": "object",
                    "required": [
                        "granteeId"
                    ],
                    "properties": {
                        "granteeId": {
                            "type": "string",
                            "description": "The grantee's ID in SAP Analytics Cloud."
                        },
                        "granteeType": {
                            "type": "string",
                            "description": "The grantee's type, USER"
                        }
                    },
                    "description": "The access levels for a user to a specified resource."
                }
            ]
        },
        "Permission": {
            "type": "object",
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "The ID of the resource to grant access to. Stories, folders, and models are supported."
                },
                "grantees": {
                    "type": "array",
                    "description": "A list of grantee objects that define user, team, or default access to the given resource.",
                    "items": {
                        "$ref": "#/definitions/Grantee"
                    }
                }
            },
            "description": "A list of grantee objects and an ID for the resource to grant access to."
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "stack": {
                    "type": "string"
                },
                "detail": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "SetShareRequestBody": {
            "type": "object",
            "properties": {
                "cascade": {
                    "type": "boolean",
                    "description": "A boolean indicating whether permissions should cascade to folder contents."
                },
                "permissions": {
                    "type": "array",
                    "description": "A list of permission objects to set.",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/ScimResourceMetadata"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScimGroupMember"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "description": "SAP Analytics Cloud Group (aka Team)"
        },
        "ScimGroupMember": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "$ref": {
                    "type": "string"
                }
            }
        },
        "ScimResourceMetadata": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            }
        },
        "BadRequestException": {
            "type": "object",
            "properties": {
                "cause": {
                    "$ref": "#/definitions/Throwable"
                },
                "stackTrace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StackTraceElement"
                    }
                },
                "response": {
                    "$ref": "#/definitions/Response"
                },
                "localizedMessage": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "suppressed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Throwable"
                    }
                }
            }
        },
        "EntityTag": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "weak": {
                    "type": "boolean"
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "uri": {
                    "type": "string",
                    "format": "uri"
                },
                "title": {
                    "type": "string"
                },
                "rels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rel": {
                    "type": "string"
                },
                "uriBuilder": {
                    "$ref": "#/definitions/UriBuilder"
                }
            }
        },
        "Locale": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "displayCountry": {
                    "type": "string"
                },
                "displayLanguage": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "displayScript": {
                    "type": "string"
                },
                "displayVariant": {
                    "type": "string"
                },
                "extensionKeys": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "iso3Country": {
                    "type": "string"
                },
                "iso3Language": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                },
                "unicodeLocaleAttributes": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "unicodeLocaleKeys": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "MediaType": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "wildcardType": {
                    "type": "boolean"
                },
                "wildcardSubtype": {
                    "type": "boolean"
                }
            }
        },
        "NewCookie": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "path": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "maxAge": {
                    "type": "integer",
                    "format": "int32"
                },
                "expiry": {
                    "type": "string",
                    "format": "date-time"
                },
                "secure": {
                    "type": "boolean"
                },
                "httpOnly": {
                    "type": "boolean"
                }
            }
        },
        "Response": {
            "type": "object",
            "properties": {
                "length": {
                    "type": "integer",
                    "format": "int32"
                },
                "language": {
                    "$ref": "#/definitions/Locale"
                },
                "location": {
                    "type": "string",
                    "format": "uri"
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "stringHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "links": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "entityTag": {
                    "$ref": "#/definitions/EntityTag"
                },
                "cookies": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/NewCookie"
                    }
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "allowedMethods": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    }
                },
                "statusInfo": {
                    "$ref": "#/definitions/StatusType"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "StackTraceElement": {
            "type": "object",
            "properties": {
                "methodName": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "lineNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "className": {
                    "type": "string"
                },
                "nativeMethod": {
                    "type": "boolean"
                }
            }
        },
        "StatusType": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "family": {
                    "type": "string",
                    "enum": [
                        "INFORMATIONAL",
                        "SUCCESSFUL",
                        "REDIRECTION",
                        "CLIENT_ERROR",
                        "SERVER_ERROR",
                        "OTHER"
                    ]
                },
                "reasonPhrase": {
                    "type": "string"
                }
            }
        },
        "Throwable": {
            "type": "object",
            "properties": {
                "cause": {
                    "$ref": "#/definitions/Throwable"
                },
                "stackTrace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StackTraceElement"
                    }
                },
                "localizedMessage": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "suppressed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Throwable"
                    }
                }
            }
        },
        "UriBuilder": {
            "type": "object"
        },
        "ForbiddenException": {
            "type": "object",
            "properties": {
                "cause": {
                    "$ref": "#/definitions/Throwable"
                },
                "stackTrace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StackTraceElement"
                    }
                },
                "response": {
                    "$ref": "#/definitions/Response"
                },
                "localizedMessage": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "suppressed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Throwable"
                    }
                }
            }
        },
        "NotFoundException": {
            "type": "object",
            "properties": {
                "cause": {
                    "$ref": "#/definitions/Throwable"
                },
                "stackTrace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StackTraceElement"
                    }
                },
                "response": {
                    "$ref": "#/definitions/Response"
                },
                "localizedMessage": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "suppressed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Throwable"
                    }
                }
            }
        },
        "InternalServerErrorException": {
            "type": "object",
            "properties": {
                "cause": {
                    "$ref": "#/definitions/Throwable"
                },
                "stackTrace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StackTraceElement"
                    }
                },
                "response": {
                    "$ref": "#/definitions/Response"
                },
                "localizedMessage": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "suppressed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Throwable"
                    }
                }
            }
        },
        "ScimCustomUserParameters": {
            "type": "object",
            "properties": {
                "dataAccessLanguage": {
                    "type": "string",
                    "description": "The preferred language to be used in live data connections"
                },
                "dateFormatting": {
                    "type": "string",
                    "description": "Date formatting scheme"
                },
                "timeFormatting": {
                    "type": "string",
                    "description": "Time formatting scheme"
                },
                "numberFormatting": {
                    "type": "string",
                    "description": "Number formatting scheme"
                },
                "cleanUpNotificationsNumberOfDays": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days to wait before cleaning up notifications"
                },
                "systemNotificationsEmailOptIn": {
                    "type": "boolean",
                    "description": "True if user wants emails for system notifications"
                },
                "marketingEmailOptIn": {
                    "type": "boolean",
                    "description": "True if user wants emails for product updates and learning"
                },
                "isConcurrent": {
                    "type": "boolean",
                    "description": "Set to true if the user has a concurrent license."
                }
            }
        },
        "ScimUserEmail": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "primary": {
                    "type": "boolean"
                }
            }
        },
        "ScimUserEnterpriseUser": {
            "type": "object",
            "properties": {
                "manager": {
                    "$ref": "#/definitions/ScimUserEnterpriseUserManager"
                }
            }
        },
        "ScimUserEnterpriseUserManager": {
            "type": "object",
            "properties": {
                "managerId": {
                    "type": "string"
                }
            }
        },
        "ScimUserGroup": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "type": "string"
                },
                "display": {
                    "type": "string"
                },
                "$ref": {
                    "type": "string"
                }
            }
        },
        "ScimUserPhoto": {
            "type": "object",
            "required": [
                "value"
            ],
            "properties": {
                "value": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ScimUserUsername": {
            "type": "object",
            "properties": {
                "givenName": {
                    "type": "string"
                },
                "familyName": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "required": [
                "userName"
            ],
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userName": {
                    "type": "string",
                    "description": "UserName, the same as user ID"
                },
                "id": {
                    "type": "string",
                    "description": "User ID, the same as userName"
                },
                "preferredLanguage": {
                    "type": "string",
                    "description": "Indicates the User's preferred language"
                },
                "meta": {
                    "description": "User metadata",
                    "$ref": "#/definitions/ScimResourceMetadata"
                },
                "name": {
                    "description": "User's complex name object",
                    "$ref": "#/definitions/ScimUserUsername"
                },
                "displayName": {
                    "type": "string",
                    "description": "User display name"
                },
                "active": {
                    "type": "boolean",
                    "description": "Whether the user is active"
                },
                "emails": {
                    "type": "array",
                    "description": "User complex object, containing the one email provided",
                    "items": {
                        "$ref": "#/definitions/ScimUserEmail"
                    }
                },
                "photos": {
                    "type": "array",
                    "description": "Adds a link to a user profile photo.",
                    "items": {
                        "$ref": "#/definitions/ScimUserPhoto"
                    }
                },
                "roles": {
                    "type": "array",
                    "description": "User's list of roles",
                    "items": {
                        "type": "string"
                    }
                },
                "groups": {
                    "type": "array",
                    "description": "User's read-only list of groups (aka. teams)",
                    "items": {
                        "$ref": "#/definitions/ScimUserGroup"
                    }
                },
                "urn:ietf:params:scim:schemas:extension:sap:user-custom-parameters:1.0": {
                    "description": "User's profile settings",
                    "$ref": "#/definitions/ScimCustomUserParameters"
                },
                "urn:scim:schemas:extension:enterprise:1.0": {
                    "description": "User's enterprise information (currently containing manager only)",
                    "$ref": "#/definitions/ScimUserEnterpriseUser"
                }
            },
            "description": "SAP Analytics Cloud User"
        },
        "Model": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The user defined description of the model. This may be an empty string, null, or undefined"
                },
                "externalId": {
                    "type": "string",
                    "description": "The external ID for the model. Note: Only models based on remote connections have an external ID"
                },
                "id": {
                    "type": "string",
                    "readOnly": true
                },
                "remoteConnection": {
                    "description": "An array of remoteConnect objects. Note: Only models based on remote data sources have remote connection information",
                    "$ref": "#/definitions/RemoteConnection"
                },
                "isPlanning": {
                    "type": "boolean",
                    "description": "Set to TRUE if the story can be read by current user"
                }
            },
            "description": "SAP Analytics Cloud model information."
        },
        "RemoteConnection": {
            "type": "object",
            "required": [
                "connectionType",
                "id",
                "systemType"
            ],
            "properties": {
                "connectionType": {
                    "type": "string",
                    "description": "The remote connection type. Possible values: DIRECT, PATH, HCP, or CLOUD"
                },
                "systemType": {
                    "type": "string",
                    "description": "The type of system that you are connecting to. For example, HANA, BW, or S/4HANA"
                },
                "name": {
                    "type": "string",
                    "description": "The remote connection name."
                },
                "protocol": {
                    "type": "string",
                    "description": "Will be set to either HTTP or HTTPS"
                },
                "client": {
                    "type": "string",
                    "description": "The client ID for the system you are connecting to. Note: The value is always returned as a string even if the ID uses numbers"
                },
                "language": {
                    "type": "string",
                    "description": "The language used by the remote system. For example, EN"
                },
                "database": {
                    "type": "string",
                    "description": "The name of the database used in the remote system"
                },
                "pathPrefix": {
                    "type": "string",
                    "description": "The prefix used for creating the connection"
                },
                "host": {
                    "type": "string",
                    "description": "The host for the remote system"
                },
                "port": {
                    "type": "string",
                    "description": "The port used for connecting to the remote system. Note: The value is always returned as a string"
                },
                "id": {
                    "type": "string",
                    "description": "The remote connection ID"
                },
                "scpAccount": {
                    "type": "string",
                    "description": "The SAP Cloud Platform account name",
                    "readOnly": true
                }
            },
            "description": "Only models based on remote data sources have remote connection information. All remote connections will have id, connectionType and systemType attributes. Different remote connections can have different sets of attributes based on the connection type and the system type. Note: Only the attributes applicable to the remote system type the model is stored on will appear in the response."
        },
        "Story": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The user-specified name for a story"
                },
                "description": {
                    "type": "string",
                    "description": "The user defined story description. Note: This may be an empty string, null, or undefined"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The user ID of the story creator"
                },
                "id": {
                    "type": "string",
                    "description": "The story ID",
                    "readOnly": true
                },
                "created": {
                    "type": "string",
                    "description": "The ISO format timestamp for when the story was created",
                    "readOnly": true
                },
                "changed": {
                    "type": "string",
                    "description": "The ISO format timestamp for when the story was last modified. If the story has not been edited since it was created, this value will match the created timestamp",
                    "readOnly": true
                },
                "isTemplate": {
                    "type": "boolean",
                    "description": "Set to TRUE if the story is a template"
                },
                "isSample": {
                    "type": "boolean",
                    "description": "Set to TRUE if the story is a sample included with SAP Analytics Cloud"
                },
                "models": {
                    "type": "array",
                    "description": "An array of models used in the story. Note: This property only appears if the story includes models",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Model"
                    }
                },
                "changedBy": {
                    "type": "string",
                    "description": "The ID of the user that last modified the story",
                    "readOnly": true
                },
                "openURL": {
                    "type": "string",
                    "description": "The root-relative URL for navigating directly to the story"
                }
            },
            "description": "SAP Analytics Cloud Story"
        },
        "ModifiedStory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The user-specified name for a story"
                }
            },
            "description": "SAP Analytics Cloud Updatable Story Attributes"
        },
        "StoryCopyResponse": {
            "type": "object",
            "properties": {
                "resourceMappings": {
                    "type": "object",
                    "description": "resourceMappings",
                    "additionalProperties": {
                        "$ref": "#/definitions/targetResourceId"
                    }
                }
            },
            "description": "Response containing the mapping between ID of copied story and target story"
        },
        "targetResourceId": {
            "type": "object",
            "properties": {
                "targetResourceId": {
                    "type": "string",
                    "description": "targetResourceId"
                }
            },
            "description": "Story ID of the created story"
        }
    },
    "externalDocs": {
        "description": "For more information, see the business documentation.",
        "url": "https://help.sap.com/doc/14cac91febef464dbb1efce20e3f1613/release/en-US/index.html"
    },
    "x-servers": [
        {
            "url": "https://{tenant_name}.{data_center}.{domain}/api",
            "description": "SAP Analytics Cloud REST API",
            "templates": {
                "tenant_name": {
                    "description": "SAP Analytics Cloud Customer Tenant Name"
                },
                "data_center": {
                    "description": "SAP Analytics Cloud Data Centers",
                    "enum": [
                        "us1",
                        "us2",
                        "us3",
                        "eu1",
                        "eu2",
                        "ap1",
                        "jp1",
                        "cn1",
                        "ca1",
                        "br1",
                        "ae1",
                        "sa1",
                        "us10",
                        "us20",
                        "us30",
                        "eu10",
                        "eu11",
                        "eu20",
                        "ap10",
                        "ap11",
                        "ap12",
                        "jp10",
                        "cn40",
                        "ca10",
                        "br10"
                    ]
                },
                "domain": {
                    "description": "SAP Analytics Cloud Domains",
                    "enum": [
                        "sapbusinessobjects.cloud",
                        "sapanalytics.cloud",
                        "sapanalyticscloud.cn",
                        "projectorca.cloud",
                        "hanacloudservices.cloud.sap",
                        "hcs.cloud.sap",
                        "analytics.sapcloud.cn",
                        "sac.ondemand.com"
                    ]
                }
            }
        }
    ],
    "x-sap-shortText": "Allows you to access SAP Analytics Cloud tenant data.",
    "security": [
        {
            "oauth2": [
                "default"
            ]
        }
    ],
    "host": "hostname"
}
